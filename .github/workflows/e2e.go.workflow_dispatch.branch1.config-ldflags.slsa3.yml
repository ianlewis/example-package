name: go workflow_dispatch branch1 SLSA3 config-ldflags

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

permissions: read-all

env:
  GH_TOKEN: ${{ secrets.E2E_GO_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator
  #ISSUE_REPOSITORY: laurentsimon/slsa-on-github-test
  THIS_FILE: e2e.go.workflow_dispatch.branch1.config-ldflags.slsa3.yml
  # WARNING: update build job if CONFIG_FILE changes.
  CONFIG_FILE: .github/configs-go/config-ldflags.yml

jobs:
  dispatch:
    runs-on: ubuntu-latest
    # WARNING: need `github.ref_name == 'main'` to avoid infinite loop when triggering manually.
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.ref_name == 'main')
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-dispatch.sh

  shim:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    outputs:
      continue: ${{ steps.verify.outputs.continue }}
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - id: verify
        run: |
          set -euo pipefail

          # BRANCH=$(echo "$THIS_FILE" | cut -d '.' -f4)
          # if [[ "$BRANCH" == "${{ github.ref_name }}" ]]; then
          #   echo "::set-output name=continue::yes"
          # fi
          echo "::set-output name=continue::yes"

  args:
    needs: [shim]
    if: needs.shim.outputs.continue == 'yes' && github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.ldflags.outputs.version }}
      commit: ${{ steps.ldflags.outputs.commit }}
      branch: ${{ steps.ldflags.outputs.branch }}
    steps:
      - id: checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.3.4
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          set -euo pipefail

          BRANCH=$(echo "$THIS_FILE" | cut -d '.' -f4)
          echo "::set-output name=version::-X main.gitVersion=v1.2.3"
          echo "::set-output name=commit::-X main.gitCommit=abcdef"
          echo "::set-output name=branch::-X main.gitBranch=$BRANCH"

  build:
    needs: [shim, args]
    if: needs.shim.outputs.continue == 'yes' && github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
    # uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@main
    uses: ianlewis/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@fix-builder-fetch-tag
    with:
      go-version: 1.18
      # We cannot use ${{ env.CONFIG_FILE }} because env variables are not available.
      config-file: .github/configs-go/config-ldflags.yml
      evaluated-envs: "VERSION:${{needs.args.outputs.version}},COMMIT:${{needs.args.outputs.commit}},BRANCH:${{needs.args.outputs.branch}}"
      compile-builder: true

  #   build:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - run: |
  #           exit 1

  verify:
    runs-on: ubuntu-latest
    needs: [shim, build]
    if: needs.shim.outputs.continue == 'yes' && github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build.outputs.go-binary-name }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl
      - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # v2.2.0
        with:
          go-version: "1.17"
      - env:
          BINARY: ${{ needs.build.outputs.go-binary-name }}
          PROVENANCE: ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl
        run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-verify.sh

  if-succeeded:
    runs-on: ubuntu-latest
    needs: [shim, build, verify]
    if: needs.shim.outputs.continue == 'yes' && github.event_name == 'workflow_dispatch' && needs.build.result == 'success' && needs.verify.result == 'success'
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-report-success.sh

  if-failed:
    runs-on: ubuntu-latest
    needs: [build, verify]
    if: always() && github.event_name == 'workflow_dispatch' && (needs.build.result == 'failure' || needs.verify.result == 'failure')
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-report-failure.sh
